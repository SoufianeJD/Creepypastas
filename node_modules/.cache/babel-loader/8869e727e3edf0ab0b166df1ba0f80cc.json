{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from '../actions/userActions';\n\nfunction signInApi(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/loginadmin\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Password or username is incorrect.\");\n  });\n}\n\nfunction signInApiclient(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/loginclient\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Password or username is incorrect.\");\n  });\n}\n\nfunction signUpApi(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/registeradmin\"\n  }).then(res => {\n    return res.data.user;\n  }).catch(err => {\n    const {\n      message\n    } = err.response.data;\n    throw new Error(message);\n  });\n}\n\nfunction signUpApiclient(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/registerclient\"\n  }).then(res => {\n    return res.data.client;\n  }).catch(err => {\n    const {\n      message\n    } = err.response.data;\n    throw new Error(message);\n  });\n}\n\nfunction getCurrentUser() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/selectadmin\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Not logged in\");\n  });\n}\n\nfunction getCurrentUserclient() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/selectclient\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Not logged in\");\n  });\n}\n\nfunction signOutApi() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/logoutadmin\"\n  }).then(res => {\n    console.log(res);\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Cannot logged out.\");\n  });\n}\n\nfunction signOutApiclient() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/logoutclient\"\n  }).then(res => {\n    console.log(res);\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Cannot logged out.\");\n  });\n}\n\nexport function* signIn({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const user = yield call(signInApi, username, password);\n    yield put(signInSuccess(user));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signInclient({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const user = yield call(signInApiclient, username, password);\n    yield put(signInSuccess(user));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const client = yield call(signUpApi, username, password);\n    yield put(signUpSuccess(client));\n  } catch (err) {\n    yield put(signUpFailure(err.message));\n  }\n}\nexport function* signUpclient({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const client = yield call(signUpApiclient, username, password);\n    yield put(signUpSuccess(client));\n  } catch (err) {\n    yield put(signUpFailure(err.message));\n  }\n}\nexport function* isUserLoggedIn() {\n  const user = yield call(getCurrentUser);\n\n  if (user) {\n    yield put(signInSuccess(user));\n  } else {\n    return;\n  }\n}\nexport function* isUserLoggedInclient() {\n  const client = yield call(getCurrentUserclient);\n\n  if (client) {\n    yield put(signInSuccess(client));\n  } else {\n    return;\n  }\n}\nexport function* signOut() {\n  try {\n    const successMsg = yield call(signOutApi);\n    console.log(successMsg);\n    yield put(signOutSuccess(successMsg));\n  } catch (err) {\n    yield put(signOutFailure(err.message));\n  }\n}\nexport function* signOutclient() {\n  try {\n    const successMsg = yield call(signOutApiclient);\n    console.log(successMsg);\n    yield put(signOutSuccess(successMsg));\n  } catch (err) {\n    yield put(signOutFailure(err.message));\n  }\n}\nexport function* onSignInStart() {\n  yield takeLatest('SIGN_IN_START', signIn);\n}\nexport function* onSignInStartclient() {\n  yield takeLatest('SIGN_IN_START', signInclient);\n}\nexport function* onSignUpStart() {\n  yield takeLatest('SIGN_UP_START', signUp);\n}\nexport function* onSignUpStartclient() {\n  yield takeLatest('SIGN_UP_START', signUpclient);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest('CHECK_USER_SESSION', isUserLoggedIn);\n}\nexport function* onCheckUserSessionclient() {\n  yield takeLatest('CHECK_USER_SESSION', isUserLoggedInclient);\n}\nexport function* onSignOutStart() {\n  yield takeLatest('SIGN_OUT_START', signOut);\n}\nexport function* onSignOutStartclient() {\n  yield takeLatest('SIGN_OUT_START', signOutclient);\n}\nexport function* userSagas() {\n  yield all([call(onSignInStart), call(onSignInStartclient), call(onSignUpStart), call(onSignUpStartclient), call(onCheckUserSession), call(onCheckUserSessionclient), call(onSignOutStart), call(onSignOutStartclient)]);\n}","map":{"version":3,"sources":["C:/Users/14382/Desktop/DECInfodeGestion/S5/PROGRAMMATION AVEC FRAMEWORK CÔTÉ CLIENT/ReactEscapeRoom_SoufianeJD/frontend/src/components/redux/sagas/userSagas.js"],"names":["all","takeLatest","call","put","axios","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signInApi","username","password","method","data","withCredentials","url","then","res","catch","err","Error","signInApiclient","signUpApi","user","message","response","signUpApiclient","client","getCurrentUser","getCurrentUserclient","signOutApi","console","log","signOutApiclient","signIn","payload","signInclient","signUp","signUpclient","isUserLoggedIn","isUserLoggedInclient","signOut","successMsg","signOutclient","onSignInStart","onSignInStartclient","onSignUpStart","onSignUpStartclient","onCheckUserSession","onCheckUserSessionclient","onSignOutStart","onSignOutStartclient","userSagas"],"mappings":"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","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n\tsignUpSuccess,\n\tsignUpFailure\n\n} from '../actions/userActions';\n\nfunction signInApi(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/loginadmin\",\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Password or username is incorrect.\");\n\t\t});\n}\n\nfunction signInApiclient(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/loginclient\",\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Password or username is incorrect.\");\n\t\t});\n}\n\nfunction signUpApi(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/registeradmin\",\n\t})\n\t\t.then(res => {\n\t\t\treturn res.data.user\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst { message } = err.response.data;\n\t\t\tthrow new Error(message);\n\t\t});\n}\n\nfunction signUpApiclient(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/registerclient\",\n\t})\n\t\t.then(res => {\n\t\t\treturn res.data.client\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst { message } = err.response.data;\n\t\t\tthrow new Error(message);\n\t\t});\n}\n\nfunction getCurrentUser() {\n\treturn axios({\n\t\tmethod: \"GET\",\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/selectadmin\"\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Not logged in\");\n\t\t});\n}\n\n\nfunction getCurrentUserclient() {\n\treturn axios({\n\t\tmethod: \"GET\",\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/selectclient\"\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Not logged in\");\n\t\t});\n}\n\n\nfunction signOutApi() {\n\treturn \taxios({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\twithCredentials: true,\n\t\t\t\turl: \"http://localhost:3015/logoutadmin\"\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\treturn res.data\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthrow new Error(\"Cannot logged out.\");\n\t\t\t});\n}\n\nfunction signOutApiclient() {\n\treturn \taxios({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\twithCredentials: true,\n\t\t\t\turl: \"http://localhost:3015/logoutclient\"\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\treturn res.data\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthrow new Error(\"Cannot logged out.\");\n\t\t\t});\n}\n\nexport function* signIn({payload: {username, password}}) {\n\ttry {\n\t\tconst user = yield call(signInApi,username, password);\n\t\tyield put(signInSuccess(user));\n\t} catch(err) {\n\t\tyield put(signInFailure(err.message));\n\t}\n}\n\nexport function* signInclient({payload: {username, password}}) {\n\ttry {\n\t\tconst user = yield call(signInApiclient,username, password);\n\t\tyield put(signInSuccess(user));\n\t} catch(err) {\n\t\tyield put(signInFailure(err.message));\n\t}\n}\n\nexport function* signUp({payload: {username, password}}) {\n\ttry {\n\t\tconst client = yield call(signUpApi,username, password);\n\t\tyield put(signUpSuccess(client));\n\t} catch(err) {\n\t\tyield put(signUpFailure(err.message));\n\t}\n}\n\n\nexport function* signUpclient({payload: {username, password}}) {\n\ttry {\n\t\tconst client = yield call(signUpApiclient, username, password);\n\t\tyield put(signUpSuccess(client));\n\t} catch(err) {\n\t\tyield put(signUpFailure(err.message));\n\t}\n}\n\nexport function* isUserLoggedIn() {\n\tconst user = yield call(getCurrentUser);\n\tif (user) {\n\t\tyield put(signInSuccess(user));\n\t} else {\n\t\treturn;\n\t}\n}\n\n\nexport function* isUserLoggedInclient() {\n\tconst client = yield call(getCurrentUserclient);\n\tif (client) {\n\t\tyield put(signInSuccess(client));\n\t} else {\n\t\treturn;\n\t}\n}\n\n\nexport function* signOut() {\n\ttry {\n\t\tconst successMsg = yield call(signOutApi);\n\t\tconsole.log(successMsg);\n\t\tyield put(signOutSuccess(successMsg));\n\t} catch(err) {\n\t\tyield put(signOutFailure(err.message));\n\t}\n}\n\nexport function* signOutclient() {\n\ttry {\n\t\tconst successMsg = yield call(signOutApiclient);\n\t\tconsole.log(successMsg);\n\t\tyield put(signOutSuccess(successMsg));\n\t} catch(err) {\n\t\tyield put(signOutFailure(err.message));\n\t}\n}\n\nexport function* onSignInStart() {\n\tyield takeLatest('SIGN_IN_START', signIn)\n}\n\nexport function* onSignInStartclient() {\n\tyield takeLatest('SIGN_IN_START', signInclient)\n}\n\nexport function* onSignUpStart() {\n\tyield takeLatest('SIGN_UP_START', signUp)\n}\n\nexport function* onSignUpStartclient() {\n\tyield takeLatest('SIGN_UP_START', signUpclient)\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest('CHECK_USER_SESSION', isUserLoggedIn)\n}\nexport function* onCheckUserSessionclient() {\n\tyield takeLatest('CHECK_USER_SESSION', isUserLoggedInclient)\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest('SIGN_OUT_START', signOut)\n}\n\nexport function* onSignOutStartclient() {\n\tyield takeLatest('SIGN_OUT_START', signOutclient)\n}\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onSignInStart),\n\t\tcall(onSignInStartclient),\n\t\tcall(onSignUpStart),\n\t\tcall(onSignUpStartclient),\n\t\tcall(onCheckUserSession),\n\t\tcall(onCheckUserSessionclient),\n\t\tcall(onSignOutStart),\n\t\tcall(onSignOutStartclient)\n\t])\n}"]},"metadata":{},"sourceType":"module"}