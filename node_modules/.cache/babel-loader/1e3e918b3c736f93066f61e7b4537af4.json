{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14382\\\\Desktop\\\\DECInfodeGestion\\\\S5\\\\PROGRAMMATION AVEC FRAMEWORK C\\xD4T\\xC9 CLIENT\\\\ReactEscapeRoom_SoufianeJD\\\\frontend\\\\src\\\\components\\\\Admin\\\\loginadmin.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState, useEffect} from 'react';\n// import Input from '../Button/Input';\n// import Button from '../Button/ButtonWithSpinner';\n// import ErrMsg from '../Msgs/ErrMsg';\n// import SuccessMsg from '../Msgs/SuccessMsg';\n// import { signInStart } from '../redux/actions/userActions';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectIsLoading, selectErrMsg, selectSuccessMsg } from '../redux/selectors/userSelector';\n// function Loginadmin(props) {\n// \tconst dispatch = useDispatch();\n// \tconst isLoading = useSelector(state => selectIsLoading(state));\n// \tlet errMsg = useSelector(state => selectErrMsg(state));\n// \tconst successMsg = useSelector(state => selectSuccessMsg(state));\n// \tconst [input, setInput] = useState({ username: '', password: '' });\n// \tconst { username, password } = input;\n// \tuseEffect(() => {\n// \t\tdocument.title = 'Login';\n// \t})\n// \tconst handleClick = e => {\n// \t\tdispatch(signInStart(input));\n// \t}\n// \tconst handleChange = e => {\n// \t\tconst { name, value } = e.target;\n// \t\terrMsg = '';\n// \t\tsetInput(prev => {\n// \t\t\treturn {\n// \t\t\t\t...prev,\n// \t\t\t\t[name]: value\n// \t\t\t}\n// \t\t})\n// \t}\n// \treturn (\n// \t\t<div className=\"login-page\">\n// \t\t\t<h1>Login</h1>\n// \t\t\t{ successMsg ? <SuccessMsg text={successMsg} /> : '' }\n// \t\t\t<Input type='text' name='username' placeholder='Username' value={username} onChange={handleChange} />\n// \t\t\t<Input type='password' name='password' placeholder='Password' value={password} onChange={handleChange} />\n// \t\t\t{\n// \t\t\t\terrMsg ? <ErrMsg text={errMsg} /> : ''\n// \t\t\t}\n// \t\t\t<Button handleClick={handleClick} isLoading={isLoading} />\n// \t\t</div>\n// \t);\n// }\n// export default Loginadmin;\nimport React, { useState, useEffect } from 'react';\nimport Input from '../Button/Input';\nimport Button from '../Button/ButtonWithSpinner';\nimport ErrMsg from '../Msgs/ErrMsg';\nimport SuccessMsg from '../Msgs/SuccessMsg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { signInStart } from '../redux/actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectErrMsg, selectSuccessMsg } from '../redux/selectors/userSelector';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(https://i.pinimg.com/originals/85/dd/07/85dd0734b8922a6478016dc1b27ce9b4.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Loginadmin(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectIsLoading(state));\n  let errMsg = useSelector(state => selectErrMsg(state));\n  const successMsg = useSelector(state => selectSuccessMsg(state));\n  const [input, setInput] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = input;\n  useEffect(() => {\n    document.title = 'Login';\n  });\n\n  const handleClick = e => {\n    dispatch(signInStart(input));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    errMsg = '';\n    setInput(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        className: classes.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this), successMsg ? /*#__PURE__*/_jsxDEV(SuccessMsg, {\n            text: successMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this) : '', /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 4\n          }, this), errMsg ? /*#__PURE__*/_jsxDEV(ErrMsg, {\n            text: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 14\n          }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: handleClick,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Loginadmin, \"ws7zEHjfTZ/7TbUUSBbceuC+u3g=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useStyles];\n});\n\n_c = Loginadmin;\nexport default Loginadmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginadmin\");","map":{"version":3,"sources":["C:/Users/14382/Desktop/DECInfodeGestion/S5/PROGRAMMATION AVEC FRAMEWORK CÔTÉ CLIENT/ReactEscapeRoom_SoufianeJD/frontend/src/components/Admin/loginadmin.js"],"names":["React","useState","useEffect","Input","Button","ErrMsg","SuccessMsg","signInStart","useDispatch","useSelector","selectIsLoading","selectErrMsg","selectSuccessMsg","makeStyles","Grid","CssBaseline","Paper","Avatar","Typography","TextField","LockOutlinedIcon","useStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Loginadmin","props","dispatch","isLoading","state","errMsg","successMsg","input","setInput","username","password","document","title","handleClick","e","handleChange","name","value","target","prev","classes"],"mappings":"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","sourcesContent":["// import React, {useState, useEffect} from 'react';\n// import Input from '../Button/Input';\n// import Button from '../Button/ButtonWithSpinner';\n// import ErrMsg from '../Msgs/ErrMsg';\n// import SuccessMsg from '../Msgs/SuccessMsg';\n\n// import { signInStart } from '../redux/actions/userActions';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import { selectIsLoading, selectErrMsg, selectSuccessMsg } from '../redux/selectors/userSelector';\n\n\n// function Loginadmin(props) {\n// \tconst dispatch = useDispatch();\n// \tconst isLoading = useSelector(state => selectIsLoading(state));\n// \tlet errMsg = useSelector(state => selectErrMsg(state));\n// \tconst successMsg = useSelector(state => selectSuccessMsg(state));\n\n// \tconst [input, setInput] = useState({ username: '', password: '' });\n// \tconst { username, password } = input;\n\n// \tuseEffect(() => {\n// \t\tdocument.title = 'Login';\n// \t})\n\n// \tconst handleClick = e => {\n// \t\tdispatch(signInStart(input));\n// \t}\n\n// \tconst handleChange = e => {\n// \t\tconst { name, value } = e.target;\n// \t\terrMsg = '';\n\n// \t\tsetInput(prev => {\n// \t\t\treturn {\n// \t\t\t\t...prev,\n// \t\t\t\t[name]: value\n// \t\t\t}\n// \t\t})\n// \t}\n\n// \treturn (\n// \t\t<div className=\"login-page\">\n// \t\t\t<h1>Login</h1>\n// \t\t\t{ successMsg ? <SuccessMsg text={successMsg} /> : '' }\n// \t\t\t<Input type='text' name='username' placeholder='Username' value={username} onChange={handleChange} />\n// \t\t\t<Input type='password' name='password' placeholder='Password' value={password} onChange={handleChange} />\n// \t\t\t{\n// \t\t\t\terrMsg ? <ErrMsg text={errMsg} /> : ''\n// \t\t\t}\n// \t\t\t<Button handleClick={handleClick} isLoading={isLoading} />\n// \t\t</div>\n// \t);\n// }\n\n// export default Loginadmin;\n\n\n\n\n\n\n\n\n\n\nimport React, {useState, useEffect} from 'react';\nimport Input from '../Button/Input';\nimport Button from '../Button/ButtonWithSpinner';\nimport ErrMsg from '../Msgs/ErrMsg';\nimport SuccessMsg from '../Msgs/SuccessMsg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { signInStart } from '../redux/actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectIsLoading, selectErrMsg, selectSuccessMsg } from '../redux/selectors/userSelector';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t  height: '100vh',\n\t},\n\timage: {\n\t  backgroundImage: 'url(https://i.pinimg.com/originals/85/dd/07/85dd0734b8922a6478016dc1b27ce9b4.gif)',\n\t  backgroundRepeat: 'no-repeat',\n\t  backgroundColor:\n\t\ttheme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n\t  backgroundSize: 'cover',\n\t  backgroundPosition: 'center',\n\t},\n  \n\tpaper: {\n\t  margin: theme.spacing(8, 4),\n\t  display: 'flex',\n\t  flexDirection: 'column',\n\t  alignItems: 'center',\n\t},\n\tavatar: {\n\t  margin: theme.spacing(1),\n\t  backgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t  width: '100%', // Fix IE 11 issue.\n\t  marginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t  margin: theme.spacing(3, 0, 2),\n\t},\n  }));\n\n\n\n\nfunction Loginadmin(props) {\n\n\n\n\tconst dispatch = useDispatch();\n\tconst isLoading = useSelector(state => selectIsLoading(state));\n\tlet errMsg = useSelector(state => selectErrMsg(state));\n\tconst successMsg = useSelector(state => selectSuccessMsg(state));\n\n\tconst [input, setInput] = useState({ username: '', password: '' });\n\tconst { username, password } = input;\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Login';\n\t})\n\n\tconst handleClick = e => {\n\t\tdispatch(signInStart(input));\n\t}\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.target;\n\t\terrMsg = '';\n\n\t\tsetInput(prev => {\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t})\n\t}\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\n\t<div className=\"login-page\">\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t\t\t  <CssBaseline />\n\t\t\t  <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n        \n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n  \n\n\t\t\t{ successMsg ? <SuccessMsg text={successMsg} /> : '' }\n\t\t\t<Input type='text' name='username'  placeholder='Username' value={username} onChange={handleChange} />\n\t\t\t\n\t\t\t<Input type='password' name='password' placeholder='Password' value={password} onChange={handleChange} />\n\t\t\t{\n\t\t\t\terrMsg ? <ErrMsg text={errMsg} /> : ''\n\t\t\t}\n\t\t\t<Button handleClick={handleClick} isLoading={isLoading} />\n\t\n        </div>\n      </Grid>\n    </Grid>\n\t </div>\n\t);\n}\n\nexport default Loginadmin;"]},"metadata":{},"sourceType":"module"}