{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from '../actions/userActions';\n\nfunction signInApi(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/loginadmin\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Password or username is incorrect.\");\n  });\n}\n\nfunction signUpApi(username, password) {\n  return axios({\n    method: \"POST\",\n    data: {\n      username,\n      password\n    },\n    withCredentials: true,\n    url: \"http://localhost:3015/registeradmin\"\n  }).then(res => {\n    return res.data.user;\n  }).catch(err => {\n    const {\n      message\n    } = err.response.data;\n    throw new Error(message);\n  });\n}\n\nfunction getCurrentUser() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/selectadmin\"\n  }).then(res => {\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Not logged in\");\n  });\n}\n\nfunction signOutApi() {\n  return axios({\n    method: \"GET\",\n    withCredentials: true,\n    url: \"http://localhost:3015/logoutadmin\"\n  }).then(res => {\n    console.log(res);\n    return res.data;\n  }).catch(err => {\n    throw new Error(\"Cannot logged out.\");\n  });\n}\n\nexport function* signIn({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const user = yield call(signInApi, username, password);\n    yield put(signInSuccess(user));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    username,\n    password\n  }\n}) {\n  try {\n    const user = yield call(signUpApi, username, password);\n    yield put(signUpSuccess(user));\n  } catch (err) {\n    yield put(signUpFailure(err.message));\n  }\n}\nexport function* isUserLoggedIn() {\n  const user = yield call(getCurrentUser);\n\n  if (user) {\n    yield put(signInSuccess(user));\n  } else {\n    return;\n  }\n}\nexport function* changePassword({\n  payload: {\n    user,\n    oldPassword,\n    newPassword\n  }\n}) {\n  try {\n    const successMsg = yield call(changePasswordApi, user, oldPassword, newPassword);\n    yield put(changePasswordSuccess(successMsg));\n  } catch (err) {\n    yield put(changePasswordFailure(err.message));\n  }\n}\nexport function* signOut() {\n  try {\n    const successMsg = yield call(signOutApi);\n    console.log(successMsg);\n    yield put(signOutSuccess(successMsg));\n  } catch (err) {\n    yield put(signOutFailure(err.message));\n  }\n}\nexport function* onSignInStart() {\n  yield takeLatest('SIGN_IN_START', signIn);\n}\nexport function* onSignUpStart() {\n  yield takeLatest('SIGN_UP_START', signUp);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest('CHECK_USER_SESSION', isUserLoggedIn);\n}\nexport function* onChangePasswordStart() {\n  yield takeLatest('CHANGE_PASSWORD_START', changePassword);\n}\nexport function* onSignOutStart() {\n  yield takeLatest('SIGN_OUT_START', signOut);\n}\nexport function* userSagas() {\n  yield all([call(onSignInStart), call(onSignUpStart), call(onCheckUserSession), call(onChangePasswordStart), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/14382/Desktop/DECInfodeGestion/S5/PROGRAMMATION AVEC FRAMEWORK CÔTÉ CLIENT/ReactEscapeRoom_SoufianeJD/frontend/src/components/redux/sagas/userSagas.js"],"names":["all","takeLatest","call","put","axios","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signInApi","username","password","method","data","withCredentials","url","then","res","catch","err","Error","signUpApi","user","message","response","getCurrentUser","signOutApi","console","log","signIn","payload","signUp","isUserLoggedIn","changePassword","oldPassword","newPassword","successMsg","changePasswordApi","changePasswordSuccess","changePasswordFailure","signOut","onSignInStart","onSignUpStart","onCheckUserSession","onChangePasswordStart","onSignOutStart","userSagas"],"mappings":"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","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n\tsignInSuccess,\n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n\tsignUpSuccess,\n\tsignUpFailure\n\t\n} from '../actions/userActions';\n\nfunction signInApi(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/loginadmin\",\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Password or username is incorrect.\");\n\t\t});\n}\n\nfunction signUpApi(username, password) {\n\treturn axios({\n\t\tmethod: \"POST\",\n\t\tdata: {\n\t\t\tusername,\n\t\t\tpassword\n\t\t},\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/registeradmin\",\n\t})\n\t\t.then(res => {\n\t\t\treturn res.data.user\n\t\t})\n\t\t.catch(err => {\n\t\t\tconst { message } = err.response.data;\n\t\t\tthrow new Error(message);\n\t\t});\n}\n\nfunction getCurrentUser() {\n\treturn axios({\n\t\tmethod: \"GET\",\n\t\twithCredentials: true,\n\t\turl: \"http://localhost:3015/selectadmin\"\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.data\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow new Error(\"Not logged in\");\n\t\t});\n}\n\n\nfunction signOutApi() {\n\treturn \taxios({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\twithCredentials: true,\n\t\t\t\turl: \"http://localhost:3015/logoutadmin\"\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\treturn res.data\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthrow new Error(\"Cannot logged out.\");\n\t\t\t});\n}\n\nexport function* signIn({payload: {username, password}}) {\n\ttry {\n\t\tconst user = yield call(signInApi, username, password);\n\t\tyield put(signInSuccess(user));\n\t} catch(err) {\n\t\tyield put(signInFailure(err.message));\n\t}\n}\n\nexport function* signUp({payload: {username, password}}) {\n\ttry {\n\t\tconst user = yield call(signUpApi, username, password);\n\t\tyield put(signUpSuccess(user));\n\t} catch(err) {\n\t\tyield put(signUpFailure(err.message));\n\t}\n}\n\nexport function* isUserLoggedIn() {\n\tconst user = yield call(getCurrentUser);\n\tif (user) {\n\t\tyield put(signInSuccess(user));\n\t} else {\n\t\treturn;\n\t}\n}\n\nexport function* changePassword({payload: {user, oldPassword, newPassword}}) {\n\ttry {\n\t\tconst successMsg = yield call(changePasswordApi, user, oldPassword, newPassword);\n\t\tyield put(changePasswordSuccess(successMsg));\n\t} catch (err) {\n\t\tyield put(changePasswordFailure(err.message));\n\t}\n}\n\nexport function* signOut() {\n\ttry {\n\t\tconst successMsg = yield call(signOutApi);\n\t\tconsole.log(successMsg);\n\t\tyield put(signOutSuccess(successMsg));\n\t} catch(err) {\n\t\tyield put(signOutFailure(err.message));\n\t}\n}\n\nexport function* onSignInStart() {\n\tyield takeLatest('SIGN_IN_START', signIn)\n}\n\nexport function* onSignUpStart() {\n\tyield takeLatest('SIGN_UP_START', signUp)\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest('CHECK_USER_SESSION', isUserLoggedIn)\n}\n\nexport function* onChangePasswordStart() {\n\tyield takeLatest('CHANGE_PASSWORD_START', changePassword)\n}\n\nexport function* onSignOutStart() {\n\tyield takeLatest('SIGN_OUT_START', signOut)\n}\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onSignInStart),\n\t\tcall(onSignUpStart),\n\t\tcall(onCheckUserSession),\n\t\tcall(onChangePasswordStart),\n\t\tcall(onSignOutStart)\n\t])\n}"]},"metadata":{},"sourceType":"module"}