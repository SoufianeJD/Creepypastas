{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14382\\\\Desktop\\\\DECInfodeGestion\\\\S5\\\\PROGRAMMATION AVEC FRAMEWORK C\\xD4T\\xC9 CLIENT\\\\ReactEscapeRoom_SoufianeJD\\\\frontend\\\\src\\\\components\\\\Admin\\\\gestion.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Input from '../components/Input';\nimport Button from '../components/ButtonWithSpinner';\nimport ErrMsg from '../components/ErrMsg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changePasswordStart, signOutStart } from '../redux/actions/userActions';\nimport { selectCurrentUser, selectIsLoading, selectErrMsg } from '../redux/selectors/userSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gestion(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => selectCurrentUser(state));\n  const {\n    username\n  } = currentUser;\n  const isLoading = useSelector(state => selectIsLoading(state));\n  let errMsgRes = useSelector(state => selectErrMsg(state));\n  const [input, setInput] = useState({\n    oldPassword: '',\n    newPassword: ''\n  });\n  const {\n    oldPassword,\n    newPassword\n  } = input;\n  const [errMsg, setErrMsg] = useState('');\n  useEffect(() => {\n    setErrMsg(errMsgRes);\n  }, [errMsgRes]);\n  useEffect(() => {\n    document.title = `Dashboard ${username}`;\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setErrMsg('');\n    setInput(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n  };\n\n  const handleChangePassword = e => {\n    if (!(oldPassword && newPassword)) {\n      setErrMsg('Please fill all input form.');\n    } else if (oldPassword === newPassword) {\n      setErrMsg('The new password is still the same as old password.');\n    } else {\n      setErrMsg('');\n      dispatch(changePasswordStart({\n        user: currentUser,\n        oldPassword,\n        newPassword\n      }));\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(signOutStart());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-pass-form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"oldPassword\",\n        placeholder: \"Old Password\",\n        value: oldPassword,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"newPassword\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), errMsg ? /*#__PURE__*/_jsxDEV(ErrMsg, {\n        text: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleChangePassword,\n        isLoading: isLoading,\n        label: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleLogout,\n        label: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Gestion, \"wyCICUvQ9+rQb9O2GsJdiXB9Hwk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Gestion;\nexport default Gestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gestion\");","map":{"version":3,"sources":["C:/Users/14382/Desktop/DECInfodeGestion/S5/PROGRAMMATION AVEC FRAMEWORK CÔTÉ CLIENT/ReactEscapeRoom_SoufianeJD/frontend/src/components/Admin/gestion.js"],"names":["useEffect","useState","Input","Button","ErrMsg","useSelector","useDispatch","changePasswordStart","signOutStart","selectCurrentUser","selectIsLoading","selectErrMsg","Gestion","props","dispatch","currentUser","state","username","isLoading","errMsgRes","input","setInput","oldPassword","newPassword","errMsg","setErrMsg","document","title","handleChange","e","name","value","target","prev","handleChangePassword","user","handleLogout"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\n\n\nimport Input from '../components/Input';\nimport Button from '../components/ButtonWithSpinner';\nimport ErrMsg from '../components/ErrMsg';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changePasswordStart, signOutStart } from '../redux/actions/userActions';\n\nimport { selectCurrentUser, selectIsLoading, selectErrMsg } from '../redux/selectors/userSelector';\n\nfunction Gestion(props) {\n\tconst dispatch = useDispatch();\n\n\tconst currentUser = useSelector(state => selectCurrentUser(state));\n\tconst { username } = currentUser;\n\n\tconst isLoading = useSelector(state => selectIsLoading(state));\n\tlet errMsgRes = useSelector(state => selectErrMsg(state))\n\n\tconst [input, setInput] = useState({ oldPassword: '', newPassword: '' });\n\tconst { oldPassword, newPassword } = input;\n\tconst [errMsg, setErrMsg] = useState('');\n\n\tuseEffect(() => {\n\t\tsetErrMsg(errMsgRes)\n\t}, [errMsgRes])\n\n\tuseEffect(() => {\n\t\tdocument.title = `Dashboard ${username}`;\n\t})\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.target;\n\t\tsetErrMsg('');\n\n\t\tsetInput(prev => {\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleChangePassword = e => {\n\t\tif (!(oldPassword && newPassword)) {\n\t\t\tsetErrMsg('Please fill all input form.')\n\t\t} else if (oldPassword === newPassword) {\n\t\t\tsetErrMsg('The new password is still the same as old password.')\n\t\t} else {\n\t\t\tsetErrMsg('');\n\t\t\tdispatch(changePasswordStart({ user: currentUser, oldPassword, newPassword }));\n\t\t}\n\t}\n\n\tconst handleLogout = () => {\n\t\tdispatch(signOutStart());\n\t}\n\n\treturn (\n\t\t<div className=\"dashboard\">\n\t\t\t<h1>Hello {username}</h1>\n\t\t\t<div className='change-pass-form'>\n\t\t\t\t<Input type='password' name='oldPassword' placeholder='Old Password' value={oldPassword} onChange={handleChange} />\n\t\t\t\t<Input type='password' name='newPassword' placeholder='New Password' value={newPassword} onChange={handleChange} />\n\t\t\t\t{\n\t\t\t\t\terrMsg ? <ErrMsg text={errMsg} /> : ''\n\t\t\t\t}\n\t\t\t\t<Button handleClick={handleChangePassword} isLoading={isLoading} label='Change Password' />\n\t\t\t\t<Button handleClick={handleLogout} label='Logout' />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\nexport default Gestion;"]},"metadata":{},"sourceType":"module"}